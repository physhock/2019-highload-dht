<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1413"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1413"> </text>
<g id="frames">
<g>
<title>all (1,124 samples, 100.00%)</title><rect x="10.0" y="1379.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1390.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.62%)</title><rect x="10.0" y="1363.0" width="7.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1374.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.62%)</title><rect x="10.0" y="1347.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1358.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.62%)</title><rect x="10.0" y="1331.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.62%)</title><rect x="10.0" y="1315.0" width="7.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.09%)</title><rect x="11.0" y="1299.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="1310.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned (2 samples, 0.18%)</title><rect x="12.1" y="1299.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="12.1" y="1283.0" width="2.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="12.1" y="1267.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="12.1" y="1251.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.1" y="1262.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (3 samples, 0.27%)</title><rect x="14.2" y="1299.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="14.2" y="1283.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="17.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="14.2" y="1267.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="17.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="14.2" y="1251.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="15.2" y="1235.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="18.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="15.2" y="1219.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="16.3" y="1203.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="19.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="16.3" y="1187.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="16.3" y="1171.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.18%)</title><rect x="17.3" y="1363.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.3" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="17.3" y="1347.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.3" y="1358.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="17.3" y="1331.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.3" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="17.3" y="1315.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.3" y="1326.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.09%)</title><rect x="17.3" y="1299.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.3" y="1310.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.09%)</title><rect x="18.4" y="1347.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="18.4" y="1331.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="18.4" y="1315.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="21.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="18.4" y="1299.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="21.4" y="1310.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.09%)</title><rect x="19.4" y="1363.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.4" y="1374.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="19.4" y="1347.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.4" y="1358.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="19.4" y="1331.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.4" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="19.4" y="1315.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.4" y="1326.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.09%)</title><rect x="19.4" y="1299.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.4" y="1310.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.71%)</title><rect x="20.5" y="1363.0" width="8.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.5" y="1374.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.71%)</title><rect x="20.5" y="1347.0" width="8.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.5" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.44%)</title><rect x="20.5" y="1331.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.5" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (5 samples, 0.44%)</title><rect x="20.5" y="1315.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="23.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="23.6" y="1299.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="26.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="23.6" y="1283.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="26.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="23.6" y="1267.0" width="2.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="26.6" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.27%)</title><rect x="25.7" y="1331.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.7" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.27%)</title><rect x="25.7" y="1315.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="28.7" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (3 samples, 0.27%)</title><rect x="25.7" y="1299.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="28.7" y="1310.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.09%)</title><rect x="28.9" y="1363.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="31.9" y="1374.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.18%)</title><rect x="29.9" y="1363.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="32.9" y="1374.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (2 samples, 0.18%)</title><rect x="29.9" y="1347.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.9" y="1358.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.18%)</title><rect x="29.9" y="1331.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.9" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.18%)</title><rect x="29.9" y="1315.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="31.0" y="1299.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="34.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="31.0" y="1283.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="31.0" y="1267.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="34.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="32.0" y="1363.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="35.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="32.0" y="1347.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="32.0" y="1331.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="35.0" y="1342.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.09%)</title><rect x="33.1" y="1347.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="36.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="33.1" y="1331.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="36.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="33.1" y="1315.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="36.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="33.1" y="1299.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="33.1" y="1283.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="36.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="33.1" y="1267.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="36.1" y="1278.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="34.1" y="1347.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.1" y="1358.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.09%)</title><rect x="35.2" y="1363.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="38.2" y="1374.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="35.2" y="1347.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="38.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1331.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="38.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1315.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="38.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1299.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="38.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1283.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="38.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1267.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="38.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="35.2" y="1251.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="38.2" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.27%)</title><rect x="36.2" y="1363.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="39.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1347.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="39.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1331.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="39.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1315.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="39.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1299.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="39.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1283.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="39.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1267.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="39.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1251.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1235.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="39.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="36.2" y="1219.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="39.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (632 samples, 56.23%)</title><rect x="39.4" y="1363.0" width="663.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.4" y="1374.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (632 samples, 56.23%)</title><rect x="39.4" y="1347.0" width="663.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.4" y="1358.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (632 samples, 56.23%)</title><rect x="39.4" y="1331.0" width="663.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.4" y="1342.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (5 samples, 0.44%)</title><rect x="60.4" y="1315.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="64.6" y="1299.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="67.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="64.6" y="1283.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="64.6" y="1267.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="67.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.44%)</title><rect x="65.6" y="1315.0" width="5.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="68.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.44%)</title><rect x="65.6" y="1299.0" width="5.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="68.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.44%)</title><rect x="65.6" y="1283.0" width="5.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="68.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.27%)</title><rect x="70.9" y="1315.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.27%)</title><rect x="70.9" y="1299.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.9" y="1310.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.27%)</title><rect x="70.9" y="1283.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.9" y="1294.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.09%)</title><rect x="70.9" y="1267.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="73.9" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="71.9" y="1267.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="74.9" y="1278.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.09%)</title><rect x="73.0" y="1267.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="76.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.27%)</title><rect x="74.0" y="1315.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.27%)</title><rect x="74.0" y="1299.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.18%)</title><rect x="75.1" y="1283.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="76.1" y="1267.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.09%)</title><rect x="76.1" y="1251.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="76.1" y="1235.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.09%)</title><rect x="76.1" y="1219.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="76.1" y="1203.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="79.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="76.1" y="1187.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="79.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="76.1" y="1171.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="79.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.27%)</title><rect x="77.2" y="1315.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.18%)</title><rect x="78.2" y="1299.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.09%)</title><rect x="78.2" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.2" y="1294.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="79.3" y="1283.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="82.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.afterExecute (1 samples, 0.09%)</title><rect x="80.3" y="1315.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (59 samples, 5.25%)</title><rect x="81.4" y="1315.0" width="61.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.4" y="1326.0">java/u..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="82.4" y="1299.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="85.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="82.4" y="1283.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="85.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="82.4" y="1267.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="85.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (57 samples, 5.07%)</title><rect x="83.5" y="1299.0" width="59.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.5" y="1310.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 4.72%)</title><rect x="83.5" y="1283.0" width="55.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.5" y="1294.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.09%)</title><rect x="84.5" y="1267.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="84.5" y="1251.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="87.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="84.5" y="1235.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="87.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="84.5" y="1219.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="87.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.18%)</title><rect x="85.6" y="1267.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.27%)</title><rect x="87.7" y="1267.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.09%)</title><rect x="87.7" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.18%)</title><rect x="88.7" y="1251.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="89.8" y="1235.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 4.09%)</title><rect x="90.8" y="1267.0" width="48.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.8" y="1278.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (45 samples, 4.00%)</title><rect x="91.9" y="1251.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.9" y="1262.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.44%)</title><rect x="91.9" y="1235.0" width="5.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="94.9" y="1246.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.09%)</title><rect x="91.9" y="1219.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.9" y="1230.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.18%)</title><rect x="92.9" y="1219.0" width="2.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="95.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="92.9" y="1203.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="95.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="92.9" y="1187.0" width="2.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="95.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="94.0" y="1171.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="97.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="94.0" y="1155.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="97.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="94.0" y="1139.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="97.0" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.09%)</title><rect x="95.0" y="1219.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="98.0" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="96.1" y="1219.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="99.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="96.1" y="1203.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="99.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="96.1" y="1187.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="99.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="96.1" y="1171.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="99.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 3.56%)</title><rect x="97.1" y="1235.0" width="42.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="100.1" y="1246.0">[un..</text>
</g>
<g>
<title>__pthread_cond_wait (40 samples, 3.56%)</title><rect x="97.1" y="1219.0" width="42.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="100.1" y="1230.0">__p..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.47%)</title><rect x="98.2" y="1203.0" width="40.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="101.2" y="1214.0">[un..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.47%)</title><rect x="98.2" y="1187.0" width="40.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="101.2" y="1198.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1171.0" width="39.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="102.2" y="1182.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1155.0" width="39.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="102.2" y="1166.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1139.0" width="39.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="102.2" y="1150.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1123.0" width="39.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="102.2" y="1134.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1107.0" width="39.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="102.2" y="1118.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1091.0" width="39.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="102.2" y="1102.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.38%)</title><rect x="99.2" y="1075.0" width="39.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="102.2" y="1086.0">[un..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.09%)</title><rect x="139.1" y="1283.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.09%)</title><rect x="139.1" y="1267.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.09%)</title><rect x="139.1" y="1251.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.09%)</title><rect x="139.1" y="1235.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.1" y="1246.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.09%)</title><rect x="139.1" y="1219.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="142.1" y="1230.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="139.1" y="1203.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="142.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.27%)</title><rect x="140.2" y="1283.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.27%)</title><rect x="140.2" y="1267.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.27%)</title><rect x="140.2" y="1251.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.27%)</title><rect x="140.2" y="1235.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.27%)</title><rect x="140.2" y="1219.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.2" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="140.2" y="1203.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="143.2" y="1214.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="140.2" y="1187.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="143.2" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="141.2" y="1203.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="144.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1187.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="144.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1171.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="144.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1155.0" width="2.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="144.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1139.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="144.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1123.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="144.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1107.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="144.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1091.0" width="2.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="144.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="141.2" y="1075.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="144.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl$$Lambda$64/1416846632.run (533 samples, 47.42%)</title><rect x="143.3" y="1315.0" width="559.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.3" y="1326.0">ru/mail/polis/service/physhock/ServiceImpl$$Lambda$64/1416846632.run</text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.lambda$sendResponse$8 (533 samples, 47.42%)</title><rect x="143.3" y="1299.0" width="559.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.3" y="1310.0">ru/mail/polis/service/physhock/ServiceImpl.lambda$sendResponse$8</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (200 samples, 17.79%)</title><rect x="143.3" y="1283.0" width="210.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="1294.0">one/nio/http/HttpSession.se..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.18%)</title><rect x="143.3" y="1267.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="143.3" y="1251.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="146.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="143.3" y="1235.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="146.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="143.3" y="1219.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="146.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="144.4" y="1251.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.4" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (194 samples, 17.26%)</title><rect x="145.4" y="1267.0" width="203.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.4" y="1278.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.36%)</title><rect x="145.4" y="1251.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.4" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="146.5" y="1235.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="149.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.18%)</title><rect x="147.5" y="1235.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.09%)</title><rect x="147.5" y="1219.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="148.6" y="1219.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="148.6" y="1203.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="148.6" y="1187.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="151.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="148.6" y="1171.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="151.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="148.6" y="1155.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="151.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (190 samples, 16.90%)</title><rect x="149.6" y="1251.0" width="199.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.6" y="1262.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (190 samples, 16.90%)</title><rect x="149.6" y="1235.0" width="199.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.6" y="1246.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (189 samples, 16.81%)</title><rect x="149.6" y="1219.0" width="198.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.6" y="1230.0">one/nio/net/Session$ArrayQ..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="150.7" y="1203.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="153.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="150.7" y="1187.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="153.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="150.7" y="1171.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="153.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (187 samples, 16.64%)</title><rect x="151.7" y="1203.0" width="196.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.7" y="1214.0">one/nio/net/NativeSocket.w..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="153.8" y="1187.0" width="6.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="156.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="153.8" y="1171.0" width="6.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="156.8" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.36%)</title><rect x="153.8" y="1155.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="156.8" y="1166.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.09%)</title><rect x="154.9" y="1139.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="157.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="154.9" y="1123.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="157.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="154.9" y="1107.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="157.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="154.9" y="1091.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="157.9" y="1102.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="155.9" y="1139.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="158.9" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.09%)</title><rect x="155.9" y="1123.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="158.9" y="1134.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.09%)</title><rect x="157.0" y="1139.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="160.0" y="1150.0"></text>
</g>
<g>
<title>__send (2 samples, 0.18%)</title><rect x="158.0" y="1155.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="161.0" y="1166.0"></text>
</g>
<g>
<title>__send (179 samples, 15.93%)</title><rect x="160.1" y="1187.0" width="187.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="163.1" y="1198.0">__send</text>
</g>
<g>
<title>[unknown] (177 samples, 15.75%)</title><rect x="162.2" y="1171.0" width="185.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="165.2" y="1182.0">[unknown]</text>
</g>
<g>
<title>[unknown] (177 samples, 15.75%)</title><rect x="162.2" y="1155.0" width="185.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="165.2" y="1166.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1139.0" width="181.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="169.4" y="1150.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1123.0" width="181.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="169.4" y="1134.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1107.0" width="181.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="169.4" y="1118.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1091.0" width="181.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="169.4" y="1102.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1075.0" width="181.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="169.4" y="1086.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.39%)</title><rect x="166.4" y="1059.0" width="181.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="169.4" y="1070.0">[unknown]</text>
</g>
<g>
<title>[unknown] (166 samples, 14.77%)</title><rect x="173.8" y="1043.0" width="174.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="176.8" y="1054.0">[unknown]</text>
</g>
<g>
<title>[unknown] (165 samples, 14.68%)</title><rect x="174.8" y="1027.0" width="173.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="177.8" y="1038.0">[unknown]</text>
</g>
<g>
<title>[unknown] (161 samples, 14.32%)</title><rect x="179.0" y="1011.0" width="169.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="182.0" y="1022.0">[unknown]</text>
</g>
<g>
<title>[unknown] (154 samples, 13.70%)</title><rect x="186.4" y="995.0" width="161.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="189.4" y="1006.0">[unknown]</text>
</g>
<g>
<title>[unknown] (144 samples, 12.81%)</title><rect x="196.9" y="979.0" width="151.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="199.9" y="990.0">[unknown]</text>
</g>
<g>
<title>[unknown] (137 samples, 12.19%)</title><rect x="204.2" y="963.0" width="143.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="207.2" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (131 samples, 11.65%)</title><rect x="210.5" y="947.0" width="137.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="213.5" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (125 samples, 11.12%)</title><rect x="216.8" y="931.0" width="131.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="219.8" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (124 samples, 11.03%)</title><rect x="217.9" y="915.0" width="130.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="220.9" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (117 samples, 10.41%)</title><rect x="225.2" y="899.0" width="122.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="228.2" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (117 samples, 10.41%)</title><rect x="225.2" y="883.0" width="122.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="228.2" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (117 samples, 10.41%)</title><rect x="225.2" y="867.0" width="122.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="228.2" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (116 samples, 10.32%)</title><rect x="226.3" y="851.0" width="121.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="229.3" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (113 samples, 10.05%)</title><rect x="229.4" y="835.0" width="118.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="232.4" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (112 samples, 9.96%)</title><rect x="230.5" y="819.0" width="117.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="233.5" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (111 samples, 9.88%)</title><rect x="231.5" y="803.0" width="116.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="234.5" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (110 samples, 9.79%)</title><rect x="232.6" y="787.0" width="115.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="235.6" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (107 samples, 9.52%)</title><rect x="235.7" y="771.0" width="112.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="238.7" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (103 samples, 9.16%)</title><rect x="239.9" y="755.0" width="108.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="242.9" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (102 samples, 9.07%)</title><rect x="241.0" y="739.0" width="107.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="244.0" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (102 samples, 9.07%)</title><rect x="241.0" y="723.0" width="107.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="244.0" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (102 samples, 9.07%)</title><rect x="241.0" y="707.0" width="107.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="244.0" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (100 samples, 8.90%)</title><rect x="243.1" y="691.0" width="104.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="246.1" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (94 samples, 8.36%)</title><rect x="249.4" y="675.0" width="98.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="252.4" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (93 samples, 8.27%)</title><rect x="250.4" y="659.0" width="97.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="253.4" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 7.65%)</title><rect x="257.8" y="643.0" width="90.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="260.8" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 7.38%)</title><rect x="260.9" y="627.0" width="87.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="263.9" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (82 samples, 7.30%)</title><rect x="262.0" y="611.0" width="86.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="265.0" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 7.03%)</title><rect x="265.1" y="595.0" width="82.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="268.1" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (11 samples, 0.98%)</title><rect x="336.5" y="579.0" width="11.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="339.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.71%)</title><rect x="339.6" y="563.0" width="8.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="342.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.62%)</title><rect x="340.7" y="547.0" width="7.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="343.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.36%)</title><rect x="343.8" y="531.0" width="4.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="346.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.36%)</title><rect x="343.8" y="515.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="346.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.36%)</title><rect x="343.8" y="499.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="346.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.36%)</title><rect x="343.8" y="483.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="346.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="344.9" y="467.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="347.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="347.0" y="451.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="350.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="347.0" y="435.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="350.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="347.0" y="419.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="350.0" y="430.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="348.0" y="1219.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="351.0" y="1230.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="348.0" y="1203.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="351.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.36%)</title><rect x="349.1" y="1267.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.18%)</title><rect x="351.2" y="1251.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.18%)</title><rect x="351.2" y="1235.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="351.2" y="1219.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="351.2" y="1203.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.18%)</title><rect x="351.2" y="1187.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl$$Lambda$62/2024846454.handle (159 samples, 14.15%)</title><rect x="353.3" y="1283.0" width="166.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.3" y="1294.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.lambda$entityHandler$7 (159 samples, 14.15%)</title><rect x="353.3" y="1267.0" width="166.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.3" y="1278.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.sendToNode (159 samples, 14.15%)</title><rect x="353.3" y="1251.0" width="166.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.3" y="1262.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="353.3" y="1235.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="353.3" y="1219.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="353.3" y="1203.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="353.3" y="1187.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="356.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="353.3" y="1171.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="356.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="353.3" y="1155.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="356.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (158 samples, 14.06%)</title><rect x="354.3" y="1235.0" width="165.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.3" y="1246.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (32 samples, 2.85%)</title><rect x="355.4" y="1219.0" width="33.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.4" y="1230.0">on..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="356.4" y="1203.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="359.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="356.4" y="1187.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="359.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="356.4" y="1171.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="359.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (29 samples, 2.58%)</title><rect x="358.5" y="1203.0" width="30.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.5" y="1214.0">on..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="358.5" y="1187.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="361.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="358.5" y="1171.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="361.5" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.27%)</title><rect x="358.5" y="1155.0" width="3.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="361.5" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.09%)</title><rect x="359.6" y="1139.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="362.6" y="1150.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="360.6" y="1139.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="363.6" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.09%)</title><rect x="360.6" y="1123.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="363.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="360.6" y="1107.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="363.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="360.6" y="1091.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="363.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="360.6" y="1075.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="363.6" y="1086.0"></text>
</g>
<g>
<title>__GI___recv (26 samples, 2.31%)</title><rect x="361.7" y="1187.0" width="27.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="364.7" y="1198.0">_..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.31%)</title><rect x="361.7" y="1171.0" width="27.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="364.7" y="1182.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.31%)</title><rect x="361.7" y="1155.0" width="27.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="364.7" y="1166.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.14%)</title><rect x="363.8" y="1139.0" width="25.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="366.8" y="1150.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.14%)</title><rect x="363.8" y="1123.0" width="25.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.8" y="1134.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.14%)</title><rect x="363.8" y="1107.0" width="25.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.8" y="1118.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.96%)</title><rect x="365.9" y="1091.0" width="23.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="368.9" y="1102.0">[..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.96%)</title><rect x="365.9" y="1075.0" width="23.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="368.9" y="1086.0">[..</text>
</g>
<g>
<title>[unknown] (20 samples, 1.78%)</title><rect x="368.0" y="1059.0" width="21.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="371.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.51%)</title><rect x="371.1" y="1043.0" width="17.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="374.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.33%)</title><rect x="373.2" y="1027.0" width="15.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="376.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.98%)</title><rect x="377.4" y="1011.0" width="11.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="380.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.80%)</title><rect x="379.5" y="995.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="382.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.71%)</title><rect x="380.6" y="979.0" width="8.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="383.6" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (15 samples, 1.33%)</title><rect x="389.0" y="1219.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="389.0" y="1203.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="392.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="389.0" y="1187.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="392.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="389.0" y="1171.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="392.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.18%)</title><rect x="390.0" y="1203.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.18%)</title><rect x="390.0" y="1187.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="391.1" y="1171.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.09%)</title><rect x="391.1" y="1155.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.1" y="1166.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="391.1" y="1139.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="394.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="391.1" y="1123.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="394.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="391.1" y="1107.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="394.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="391.1" y="1091.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="394.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.18%)</title><rect x="392.1" y="1203.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.1" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.18%)</title><rect x="392.1" y="1187.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="395.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="394.2" y="1203.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="394.2" y="1187.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.2" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.09%)</title><rect x="394.2" y="1171.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.2" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="395.3" y="1203.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="398.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="395.3" y="1187.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="398.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="395.3" y="1171.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="398.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="395.3" y="1155.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="398.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.27%)</title><rect x="396.3" y="1203.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="397.4" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="397.4" y="1171.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="398.4" y="1155.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="401.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="398.4" y="1139.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="401.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="398.4" y="1123.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="401.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.18%)</title><rect x="399.5" y="1203.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="400.5" y="1187.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="403.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="400.5" y="1171.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="403.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="400.5" y="1155.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="403.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="400.5" y="1139.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="403.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="400.5" y="1123.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="403.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.09%)</title><rect x="401.6" y="1203.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="401.6" y="1187.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="404.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="401.6" y="1171.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="404.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="401.6" y="1155.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="404.6" y="1166.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2 samples, 0.18%)</title><rect x="402.6" y="1203.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="402.6" y="1187.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="405.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="402.6" y="1171.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="405.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="402.6" y="1155.0" width="2.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="405.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 1.16%)</title><rect x="404.7" y="1219.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="405.8" y="1203.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="408.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="405.8" y="1187.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="408.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="405.8" y="1171.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="408.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.18%)</title><rect x="406.8" y="1203.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="408.9" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.71%)</title><rect x="410.0" y="1203.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="410.0" y="1187.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="413.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="410.0" y="1171.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="413.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="410.0" y="1155.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="413.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.09%)</title><rect x="411.0" y="1187.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="411.0" y="1171.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="414.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="411.0" y="1155.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="414.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="411.0" y="1139.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="414.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="412.1" y="1187.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.27%)</title><rect x="413.1" y="1187.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="415.2" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="415.2" y="1155.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="418.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="415.2" y="1139.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="418.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="415.2" y="1123.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="418.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.18%)</title><rect x="416.3" y="1187.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.3" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="416.3" y="1171.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="419.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="417.3" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.09%)</title><rect x="418.4" y="1219.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="418.4" y="1203.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="418.4" y="1187.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.4" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="418.4" y="1171.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="421.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1155.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="421.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1139.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="421.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1123.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="421.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1107.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="421.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1091.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="421.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="418.4" y="1075.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="421.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (11 samples, 0.98%)</title><rect x="419.4" y="1219.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.4" y="1230.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.09%)</title><rect x="421.5" y="1203.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="424.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="421.5" y="1187.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="424.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="421.5" y="1171.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="424.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="421.5" y="1155.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="424.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="422.6" y="1203.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="425.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="422.6" y="1187.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="425.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="422.6" y="1171.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="425.6" y="1182.0"></text>
</g>
<g>
<title>__GI___setsockopt (7 samples, 0.62%)</title><rect x="423.6" y="1203.0" width="7.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="426.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="424.7" y="1187.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="427.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="424.7" y="1171.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="427.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.44%)</title><rect x="425.7" y="1155.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="428.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="429.9" y="1139.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="432.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="429.9" y="1123.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="432.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (84 samples, 7.47%)</title><rect x="431.0" y="1219.0" width="88.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.0" y="1230.0">one/nio/ne..</text>
</g>
<g>
<title>__send (84 samples, 7.47%)</title><rect x="431.0" y="1203.0" width="88.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="434.0" y="1214.0">__send</text>
</g>
<g>
<title>[unknown] (84 samples, 7.47%)</title><rect x="431.0" y="1187.0" width="88.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="434.0" y="1198.0">[unknown]</text>
</g>
<g>
<title>[unknown] (84 samples, 7.47%)</title><rect x="431.0" y="1171.0" width="88.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="434.0" y="1182.0">[unknown]</text>
</g>
<g>
<title>[unknown] (84 samples, 7.47%)</title><rect x="431.0" y="1155.0" width="88.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="434.0" y="1166.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 7.38%)</title><rect x="432.0" y="1139.0" width="87.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="435.0" y="1150.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 7.38%)</title><rect x="432.0" y="1123.0" width="87.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="435.0" y="1134.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 7.38%)</title><rect x="432.0" y="1107.0" width="87.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="435.0" y="1118.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 7.03%)</title><rect x="436.2" y="1091.0" width="83.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="439.2" y="1102.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 7.03%)</title><rect x="436.2" y="1075.0" width="83.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="439.2" y="1086.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 6.85%)</title><rect x="438.3" y="1059.0" width="80.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="441.3" y="1070.0">[unknown]</text>
</g>
<g>
<title>[unknown] (74 samples, 6.58%)</title><rect x="441.5" y="1043.0" width="77.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="444.5" y="1054.0">[unknown]</text>
</g>
<g>
<title>[unknown] (72 samples, 6.41%)</title><rect x="443.6" y="1027.0" width="75.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="446.6" y="1038.0">[unknown]</text>
</g>
<g>
<title>[unknown] (69 samples, 6.14%)</title><rect x="446.7" y="1011.0" width="72.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="449.7" y="1022.0">[unknown]</text>
</g>
<g>
<title>[unknown] (64 samples, 5.69%)</title><rect x="452.0" y="995.0" width="67.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="455.0" y="1006.0">[unknown]</text>
</g>
<g>
<title>[unknown] (64 samples, 5.69%)</title><rect x="452.0" y="979.0" width="67.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="455.0" y="990.0">[unknown]</text>
</g>
<g>
<title>[unknown] (63 samples, 5.60%)</title><rect x="453.0" y="963.0" width="66.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="456.0" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (60 samples, 5.34%)</title><rect x="456.2" y="947.0" width="63.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="459.2" y="958.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 5.16%)</title><rect x="458.3" y="931.0" width="60.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="461.3" y="942.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 5.16%)</title><rect x="458.3" y="915.0" width="60.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="461.3" y="926.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 5.16%)</title><rect x="458.3" y="899.0" width="60.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="461.3" y="910.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 5.16%)</title><rect x="458.3" y="883.0" width="60.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="461.3" y="894.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 5.16%)</title><rect x="458.3" y="867.0" width="60.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="461.3" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (57 samples, 5.07%)</title><rect x="459.3" y="851.0" width="59.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="462.3" y="862.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="460.4" y="835.0" width="58.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="463.4" y="846.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="460.4" y="819.0" width="58.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="463.4" y="830.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="803.0" width="56.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="465.5" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="787.0" width="56.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="465.5" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="771.0" width="56.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="465.5" y="782.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="755.0" width="56.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="465.5" y="766.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="739.0" width="56.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="465.5" y="750.0">[unkno..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.80%)</title><rect x="462.5" y="723.0" width="56.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="465.5" y="734.0">[unkno..</text>
</g>
<g>
<title>[unknown] (53 samples, 4.72%)</title><rect x="463.5" y="707.0" width="55.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="466.5" y="718.0">[unkn..</text>
</g>
<g>
<title>[unknown] (52 samples, 4.63%)</title><rect x="464.6" y="691.0" width="54.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="467.6" y="702.0">[unkn..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.54%)</title><rect x="465.6" y="675.0" width="53.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="468.6" y="686.0">[unkn..</text>
</g>
<g>
<title>[unknown] (48 samples, 4.27%)</title><rect x="468.8" y="659.0" width="50.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="471.8" y="670.0">[unkn..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.00%)</title><rect x="471.9" y="643.0" width="47.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="474.9" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.00%)</title><rect x="471.9" y="627.0" width="47.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="474.9" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.00%)</title><rect x="471.9" y="611.0" width="47.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="474.9" y="622.0">[unk..</text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.09%)</title><rect x="519.2" y="1219.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.2" y="1230.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.09%)</title><rect x="519.2" y="1203.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.2" y="1214.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.09%)</title><rect x="519.2" y="1187.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl$$Lambda$66/410370156.handle (174 samples, 15.48%)</title><rect x="520.2" y="1283.0" width="182.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.2" y="1294.0">ru/mail/polis/service/ph..</text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.lambda$entityHandler$4 (174 samples, 15.48%)</title><rect x="520.2" y="1267.0" width="182.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.2" y="1278.0">ru/mail/polis/service/ph..</text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.putData (174 samples, 15.48%)</title><rect x="520.2" y="1251.0" width="182.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.2" y="1262.0">ru/mail/polis/service/ph..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="520.2" y="1235.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.2" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/physhock/DAOImpl.upsert (173 samples, 15.39%)</title><rect x="521.3" y="1235.0" width="181.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.3" y="1246.0">ru/mail/polis/dao/physh..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (171 samples, 15.21%)</title><rect x="522.3" y="1219.0" width="179.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.3" y="1230.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (171 samples, 15.21%)</title><rect x="522.3" y="1203.0" width="179.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.3" y="1214.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (110 samples, 9.79%)</title><rect x="523.4" y="1187.0" width="115.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="526.4" y="1198.0">Java_org_rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.09%)</title><rect x="524.4" y="1171.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="527.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="524.4" y="1155.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="527.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="524.4" y="1139.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="527.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="524.4" y="1123.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="527.4" y="1134.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="525.5" y="1171.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="528.5" y="1182.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.09%)</title><rect x="526.5" y="1171.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="529.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="526.5" y="1155.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="529.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="526.5" y="1139.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="529.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="526.5" y="1123.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="529.5" y="1134.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.09%)</title><rect x="527.6" y="1171.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="530.6" y="1182.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.09%)</title><rect x="528.6" y="1171.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="531.6" y="1182.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.09%)</title><rect x="529.7" y="1171.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="532.7" y="1182.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (103 samples, 9.16%)</title><rect x="530.7" y="1171.0" width="108.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="533.7" y="1182.0">rocksdb_put_h..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="531.8" y="1155.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="534.8" y="1166.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.09%)</title><rect x="532.8" y="1155.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="535.8" y="1166.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.18%)</title><rect x="533.9" y="1155.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="536.9" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="534.9" y="1139.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="537.9" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="534.9" y="1123.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="537.9" y="1134.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (96 samples, 8.54%)</title><rect x="536.0" y="1155.0" width="100.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="539.0" y="1166.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (96 samples, 8.54%)</title><rect x="536.0" y="1139.0" width="100.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="539.0" y="1150.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (95 samples, 8.45%)</title><rect x="536.0" y="1123.0" width="99.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="539.0" y="1134.0">rocksdb::DB:..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.09%)</title><rect x="536.0" y="1107.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="539.0" y="1118.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (83 samples, 7.38%)</title><rect x="537.0" y="1107.0" width="87.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="540.0" y="1118.0">rocksdb::D..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="538.1" y="1091.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="541.1" y="1102.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="539.1" y="1091.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="542.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.09%)</title><rect x="540.2" y="1091.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="543.2" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (73 samples, 6.49%)</title><rect x="541.2" y="1091.0" width="76.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="544.2" y="1102.0">rocksdb:..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="545.4" y="1075.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="548.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="545.4" y="1059.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="548.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="545.4" y="1043.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="548.4" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="548.6" y="1075.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="551.6" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="549.6" y="1075.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="552.6" y="1086.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (19 samples, 1.69%)</title><rect x="550.7" y="1075.0" width="19.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="553.7" y="1086.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (19 samples, 1.69%)</title><rect x="550.7" y="1059.0" width="19.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="553.7" y="1070.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (19 samples, 1.69%)</title><rect x="550.7" y="1043.0" width="19.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="553.7" y="1054.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (3 samples, 0.27%)</title><rect x="550.7" y="1027.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="553.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (16 samples, 1.42%)</title><rect x="553.8" y="1027.0" width="16.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="556.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="553.8" y="1011.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="556.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="553.8" y="995.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="556.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="553.8" y="979.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="556.8" y="990.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="554.9" y="1011.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="557.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="555.9" y="1011.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="558.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="557.0" y="1011.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="560.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="557.0" y="995.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="560.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="557.0" y="979.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="560.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="557.0" y="963.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="560.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (12 samples, 1.07%)</title><rect x="558.0" y="1011.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="561.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.18%)</title><rect x="562.2" y="995.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="565.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 0.53%)</title><rect x="564.3" y="995.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="567.3" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.27%)</title><rect x="565.4" y="979.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="568.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.18%)</title><rect x="568.5" y="979.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="571.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="569.6" y="963.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="572.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="569.6" y="947.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="572.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="569.6" y="931.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="572.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.09%)</title><rect x="570.6" y="1075.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="573.6" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (40 samples, 3.56%)</title><rect x="571.7" y="1075.0" width="41.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.7" y="1086.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="571.7" y="1059.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="574.7" y="1070.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (39 samples, 3.47%)</title><rect x="572.7" y="1059.0" width="40.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.7" y="1070.0">roc..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="573.8" y="1043.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="576.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="573.8" y="1027.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="576.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="573.8" y="1011.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="576.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (37 samples, 3.29%)</title><rect x="574.8" y="1043.0" width="38.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="577.8" y="1054.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (37 samples, 3.29%)</title><rect x="574.8" y="1027.0" width="38.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="577.8" y="1038.0">roc..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.18%)</title><rect x="575.9" y="1011.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="578.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="995.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="579.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="979.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="579.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="963.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="579.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="947.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="579.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="931.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="579.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="915.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="579.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="576.9" y="899.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="579.9" y="910.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="578.0" y="1011.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="581.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.09%)</title><rect x="579.0" y="1011.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (31 samples, 2.76%)</title><rect x="580.1" y="1011.0" width="32.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="583.1" y="1022.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (3 samples, 0.27%)</title><rect x="580.1" y="995.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="583.1" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="580.1" y="979.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="583.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="581.1" y="979.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="584.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="582.2" y="979.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.2" y="990.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.09%)</title><rect x="582.2" y="963.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="585.2" y="974.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (22 samples, 1.96%)</title><rect x="583.2" y="995.0" width="23.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="586.2" y="1006.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (19 samples, 1.69%)</title><rect x="584.3" y="979.0" width="19.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="587.3" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (13 samples, 1.16%)</title><rect x="587.4" y="963.0" width="13.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="590.4" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (1 samples, 0.09%)</title><rect x="589.5" y="947.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="592.5" y="958.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.36%)</title><rect x="590.6" y="947.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="593.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="593.7" y="931.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="596.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="593.7" y="915.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="596.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="593.7" y="899.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="596.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.53%)</title><rect x="594.8" y="947.0" width="6.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="597.8" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (1 samples, 0.09%)</title><rect x="596.9" y="931.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="599.9" y="942.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.18%)</title><rect x="597.9" y="931.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="600.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="599.0" y="915.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="602.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="599.0" y="899.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="602.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="599.0" y="883.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="602.0" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="600.0" y="931.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="603.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="600.0" y="915.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="603.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="600.0" y="899.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="603.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="600.0" y="883.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="603.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="601.0" y="963.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="604.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="601.0" y="947.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="604.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="601.0" y="931.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="604.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.18%)</title><rect x="602.1" y="963.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="605.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="603.1" y="947.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="606.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="603.1" y="931.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="606.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="603.1" y="915.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="606.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.18%)</title><rect x="604.2" y="979.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="607.2" y="990.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.09%)</title><rect x="605.2" y="963.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="608.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.44%)</title><rect x="606.3" y="995.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="609.3" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17918033658933340110.so (2 samples, 0.18%)</title><rect x="607.3" y="979.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="610.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.18%)</title><rect x="609.4" y="979.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="612.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.09%)</title><rect x="611.5" y="995.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="614.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.09%)</title><rect x="612.6" y="1011.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="615.6" y="1022.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.18%)</title><rect x="613.6" y="1075.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="616.6" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.09%)</title><rect x="615.7" y="1075.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="618.7" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.09%)</title><rect x="615.7" y="1059.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="618.7" y="1070.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.09%)</title><rect x="616.8" y="1075.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="619.8" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.09%)</title><rect x="617.8" y="1091.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="620.8" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.09%)</title><rect x="618.9" y="1091.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="621.9" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.18%)</title><rect x="619.9" y="1091.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="622.9" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.09%)</title><rect x="622.0" y="1091.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="622.0" y="1075.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="625.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="622.0" y="1059.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="625.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="622.0" y="1043.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="625.0" y="1054.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.09%)</title><rect x="623.1" y="1091.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="626.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.18%)</title><rect x="624.1" y="1107.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="627.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="624.1" y="1091.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="627.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="624.1" y="1075.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="627.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="624.1" y="1059.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="627.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.18%)</title><rect x="626.2" y="1107.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="629.2" y="1118.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.36%)</title><rect x="628.3" y="1107.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="631.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="628.3" y="1091.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="631.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="628.3" y="1075.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="631.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="628.3" y="1059.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="631.3" y="1070.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.09%)</title><rect x="629.4" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="632.4" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="630.4" y="1091.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="633.4" y="1102.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="631.5" y="1091.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="634.5" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.09%)</title><rect x="632.5" y="1107.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="635.5" y="1118.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.09%)</title><rect x="633.6" y="1107.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="636.6" y="1118.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.09%)</title><rect x="634.6" y="1107.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="637.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="634.6" y="1091.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="637.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="634.6" y="1075.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="637.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="634.6" y="1059.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="637.6" y="1070.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.09%)</title><rect x="635.7" y="1123.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="638.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="635.7" y="1107.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="638.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="635.7" y="1091.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="638.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="635.7" y="1075.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="638.7" y="1086.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.09%)</title><rect x="636.7" y="1155.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="639.7" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.09%)</title><rect x="637.8" y="1155.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="640.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="638.8" y="1187.0" width="58.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="641.8" y="1198.0">[unkno..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="638.8" y="1171.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="641.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="638.8" y="1155.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="641.8" y="1166.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.09%)</title><rect x="639.9" y="1155.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.9" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.09%)</title><rect x="640.9" y="1171.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="643.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1155.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="643.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1139.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="643.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1123.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="643.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1107.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="643.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1091.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="643.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1075.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="643.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1059.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="643.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="640.9" y="1043.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="643.9" y="1054.0"></text>
</g>
<g>
<title>write (53 samples, 4.72%)</title><rect x="642.0" y="1171.0" width="55.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="645.0" y="1182.0">write</text>
</g>
<g>
<title>[unknown] (51 samples, 4.54%)</title><rect x="644.1" y="1155.0" width="53.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.1" y="1166.0">[unkn..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.54%)</title><rect x="644.1" y="1139.0" width="53.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="647.1" y="1150.0">[unkn..</text>
</g>
<g>
<title>[unknown] (48 samples, 4.27%)</title><rect x="647.2" y="1123.0" width="50.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="650.2" y="1134.0">[unkn..</text>
</g>
<g>
<title>[unknown] (48 samples, 4.27%)</title><rect x="647.2" y="1107.0" width="50.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="650.2" y="1118.0">[unkn..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.09%)</title><rect x="649.3" y="1091.0" width="48.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="652.3" y="1102.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.83%)</title><rect x="652.5" y="1075.0" width="45.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="655.5" y="1086.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.47%)</title><rect x="656.7" y="1059.0" width="40.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="659.7" y="1070.0">[un..</text>
</g>
<g>
<title>[unknown] (37 samples, 3.29%)</title><rect x="658.8" y="1043.0" width="38.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="661.8" y="1054.0">[un..</text>
</g>
<g>
<title>[unknown] (34 samples, 3.02%)</title><rect x="661.9" y="1027.0" width="35.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="664.9" y="1038.0">[un..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.76%)</title><rect x="665.1" y="1011.0" width="32.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="668.1" y="1022.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.67%)</title><rect x="666.1" y="995.0" width="31.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="669.1" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.22%)</title><rect x="671.4" y="979.0" width="26.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="674.4" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (21 samples, 1.87%)</title><rect x="675.6" y="963.0" width="22.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="678.6" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (17 samples, 1.51%)</title><rect x="679.8" y="947.0" width="17.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="682.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.51%)</title><rect x="679.8" y="931.0" width="17.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="682.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.80%)</title><rect x="688.2" y="915.0" width="9.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="691.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.62%)</title><rect x="690.3" y="899.0" width="7.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="693.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="691.3" y="883.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="694.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="694.5" y="867.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="697.5" y="878.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.18%)</title><rect x="697.6" y="1187.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="700.6" y="1198.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.18%)</title><rect x="699.7" y="1187.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="702.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="700.8" y="1171.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="703.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="700.8" y="1155.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="703.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="700.8" y="1139.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="703.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/physhock/ByteBufferUtils.getByteArray (1 samples, 0.09%)</title><rect x="701.8" y="1219.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.8" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.09%)</title><rect x="701.8" y="1203.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.8" y="1214.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="701.8" y="1187.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.09%)</title><rect x="702.9" y="1363.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.9" y="1374.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (1 samples, 0.09%)</title><rect x="702.9" y="1347.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.9" y="1358.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (1 samples, 0.09%)</title><rect x="702.9" y="1331.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.9" y="1342.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (1 samples, 0.09%)</title><rect x="702.9" y="1315.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.9" y="1326.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (208 samples, 18.51%)</title><rect x="703.9" y="1363.0" width="218.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.9" y="1374.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.27%)</title><rect x="717.6" y="1347.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.6" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.7" y="1347.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="723.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.7" y="1331.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="723.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.7" y="1315.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="723.7" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 5.78%)</title><rect x="721.8" y="1347.0" width="68.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.8" y="1358.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.18%)</title><rect x="721.8" y="1331.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.8" y="1342.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.18%)</title><rect x="721.8" y="1315.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.8" y="1326.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.09%)</title><rect x="722.8" y="1299.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.09%)</title><rect x="722.8" y="1283.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.8" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (63 samples, 5.60%)</title><rect x="723.9" y="1331.0" width="66.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.9" y="1342.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.09%)</title><rect x="724.9" y="1315.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="727.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 5.34%)</title><rect x="726.0" y="1315.0" width="63.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="729.0" y="1326.0">[unkno..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="726.0" y="1299.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="729.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="726.0" y="1283.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="729.0" y="1294.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="727.0" y="1299.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="730.0" y="1310.0"></text>
</g>
<g>
<title>epoll_wait (58 samples, 5.16%)</title><rect x="728.1" y="1299.0" width="60.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="731.1" y="1310.0">epoll_..</text>
</g>
<g>
<title>[unknown] (57 samples, 5.07%)</title><rect x="729.1" y="1283.0" width="59.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="732.1" y="1294.0">[unkno..</text>
</g>
<g>
<title>[unknown] (57 samples, 5.07%)</title><rect x="729.1" y="1267.0" width="59.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="732.1" y="1278.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="730.2" y="1251.0" width="58.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="733.2" y="1262.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="730.2" y="1235.0" width="58.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="733.2" y="1246.0">[unkno..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.98%)</title><rect x="730.2" y="1219.0" width="58.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="733.2" y="1230.0">[unkno..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.09%)</title><rect x="740.7" y="1203.0" width="48.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="743.7" y="1214.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.65%)</title><rect x="745.9" y="1187.0" width="43.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="748.9" y="1198.0">[unk..</text>
</g>
<g>
<title>[unknown] (36 samples, 3.20%)</title><rect x="751.2" y="1171.0" width="37.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="754.2" y="1182.0">[un..</text>
</g>
<g>
<title>[unknown] (34 samples, 3.02%)</title><rect x="753.3" y="1155.0" width="35.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="756.3" y="1166.0">[un..</text>
</g>
<g>
<title>epoll_wait (1 samples, 0.09%)</title><rect x="789.0" y="1315.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="792.0" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (126 samples, 11.21%)</title><rect x="790.0" y="1347.0" width="132.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.0" y="1358.0">one/nio/net/Sess..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="791.1" y="1331.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="794.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="791.1" y="1315.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="794.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="791.1" y="1299.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="794.1" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (124 samples, 11.03%)</title><rect x="792.1" y="1331.0" width="130.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.1" y="1342.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (96 samples, 8.54%)</title><rect x="793.2" y="1315.0" width="100.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.2" y="1326.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="794.2" y="1299.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.2" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 7.03%)</title><rect x="795.3" y="1299.0" width="82.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.3" y="1310.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 7.03%)</title><rect x="795.3" y="1283.0" width="82.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.3" y="1294.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entityHandler.handleRequest (72 samples, 6.41%)</title><rect x="795.3" y="1267.0" width="75.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.3" y="1278.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.53%)</title><rect x="795.3" y="1251.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.36%)</title><rect x="797.4" y="1235.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="797.4" y="1219.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.09%)</title><rect x="797.4" y="1203.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.4" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="797.4" y="1187.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="800.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.09%)</title><rect x="798.4" y="1219.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.18%)</title><rect x="799.5" y="1219.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="799.5" y="1203.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="802.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="799.5" y="1187.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.18%)</title><rect x="799.5" y="1171.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="800.5" y="1155.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="803.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="800.5" y="1139.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="803.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="800.5" y="1123.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="803.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.entityHandler (66 samples, 5.87%)</title><rect x="801.6" y="1251.0" width="69.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.6" y="1262.0">ru/mail..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="803.7" y="1235.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="806.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="803.7" y="1219.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="806.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="803.7" y="1203.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="806.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.18%)</title><rect x="804.7" y="1235.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.18%)</title><rect x="804.7" y="1219.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.18%)</title><rect x="804.7" y="1203.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.7" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.18%)</title><rect x="804.7" y="1187.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1171.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="808.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1155.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="808.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1139.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="808.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1123.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="808.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1107.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="808.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1091.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="808.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1075.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="808.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1059.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="808.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="805.8" y="1043.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="808.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (3 samples, 0.27%)</title><rect x="806.8" y="1235.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (2 samples, 0.18%)</title><rect x="806.8" y="1219.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (2 samples, 0.18%)</title><rect x="806.8" y="1203.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (2 samples, 0.18%)</title><rect x="806.8" y="1187.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.09%)</title><rect x="807.9" y="1171.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.09%)</title><rect x="807.9" y="1155.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="808.9" y="1219.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.09%)</title><rect x="808.9" y="1203.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.9" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="810.0" y="1235.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.0" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="810.0" y="1219.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="810.0" y="1203.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="810.0" y="1187.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.0" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="810.0" y="1171.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.0" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="810.0" y="1155.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/physhock/ServiceImpl.sendResponse (57 samples, 5.07%)</title><rect x="811.0" y="1235.0" width="59.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.0" y="1246.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 5.07%)</title><rect x="811.0" y="1219.0" width="59.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.0" y="1230.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (56 samples, 4.98%)</title><rect x="812.1" y="1203.0" width="58.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.1" y="1214.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.09%)</title><rect x="812.1" y="1187.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (55 samples, 4.89%)</title><rect x="813.1" y="1187.0" width="57.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.1" y="1198.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.09%)</title><rect x="813.1" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="813.1" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.09%)</title><rect x="813.1" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.09%)</title><rect x="813.1" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="813.1" y="1107.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.1" y="1118.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.09%)</title><rect x="813.1" y="1091.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="816.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (54 samples, 4.80%)</title><rect x="814.2" y="1171.0" width="56.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.2" y="1182.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (54 samples, 4.80%)</title><rect x="814.2" y="1155.0" width="56.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.2" y="1166.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (54 samples, 4.80%)</title><rect x="814.2" y="1139.0" width="56.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.2" y="1150.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 4.80%)</title><rect x="814.2" y="1123.0" width="56.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.2" y="1134.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 4.80%)</title><rect x="814.2" y="1107.0" width="56.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.2" y="1118.0">jdk/in..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="814.2" y="1091.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="817.2" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.27%)</title><rect x="815.2" y="1091.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="818.2" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="815.2" y="1075.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="818.2" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.18%)</title><rect x="816.3" y="1075.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="819.3" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.27%)</title><rect x="818.4" y="1091.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="821.4" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 4.18%)</title><rect x="821.5" y="1091.0" width="49.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="824.5" y="1102.0">pthre..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.09%)</title><rect x="822.6" y="1075.0" width="48.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="825.6" y="1086.0">[unk..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.09%)</title><rect x="822.6" y="1059.0" width="48.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="825.6" y="1070.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.83%)</title><rect x="825.7" y="1043.0" width="45.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="828.7" y="1054.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.83%)</title><rect x="825.7" y="1027.0" width="45.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="828.7" y="1038.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.83%)</title><rect x="825.7" y="1011.0" width="45.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="828.7" y="1022.0">[unk..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.74%)</title><rect x="826.8" y="995.0" width="44.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="829.8" y="1006.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.65%)</title><rect x="827.8" y="979.0" width="43.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="830.8" y="990.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.65%)</title><rect x="827.8" y="963.0" width="43.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="830.8" y="974.0">[unk..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="870.9" y="1267.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="870.9" y="1251.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="873.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="870.9" y="1235.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="873.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="870.9" y="1219.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="873.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.27%)</title><rect x="871.9" y="1267.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.9" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.27%)</title><rect x="871.9" y="1251.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.9" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.18%)</title><rect x="871.9" y="1235.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="871.9" y="1219.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.9" y="1230.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="873.0" y="1219.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="876.0" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.09%)</title><rect x="874.0" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.09%)</title><rect x="874.0" y="1219.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.09%)</title><rect x="874.0" y="1203.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.27%)</title><rect x="875.1" y="1267.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.27%)</title><rect x="875.1" y="1251.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="875.1" y="1235.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="875.1" y="1219.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="878.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="875.1" y="1203.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="878.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="875.1" y="1187.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="878.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.18%)</title><rect x="876.1" y="1235.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="876.1" y="1219.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.1" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="876.1" y="1203.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="879.1" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title><rect x="877.2" y="1219.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.44%)</title><rect x="878.2" y="1299.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.2" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.18%)</title><rect x="878.2" y="1283.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="880.3" y="1283.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="880.3" y="1267.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="882.4" y="1283.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.4" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.27%)</title><rect x="883.5" y="1299.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.27%)</title><rect x="883.5" y="1283.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.27%)</title><rect x="883.5" y="1267.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.09%)</title><rect x="884.5" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.09%)</title><rect x="884.5" y="1235.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="885.6" y="1251.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.44%)</title><rect x="886.6" y="1299.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.36%)</title><rect x="886.6" y="1283.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="889.8" y="1267.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="889.8" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="889.8" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="889.8" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="889.8" y="1203.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="889.8" y="1187.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="892.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="889.8" y="1171.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="892.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="889.8" y="1155.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="890.8" y="1283.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="890.8" y="1267.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="890.8" y="1251.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="893.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="890.8" y="1235.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="893.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="890.8" y="1219.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="893.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="891.9" y="1299.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.9" y="1310.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="891.9" y="1283.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 2.40%)</title><rect x="894.0" y="1315.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.0" y="1326.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (25 samples, 2.22%)</title><rect x="894.0" y="1299.0" width="26.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.0" y="1310.0">o..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.62%)</title><rect x="895.0" y="1283.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="898.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.62%)</title><rect x="895.0" y="1267.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="898.0" y="1278.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.53%)</title><rect x="895.0" y="1251.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="898.0" y="1262.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="896.0" y="1235.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="899.0" y="1246.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.09%)</title><rect x="897.1" y="1235.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="900.1" y="1246.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="898.1" y="1235.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="901.1" y="1246.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.18%)</title><rect x="899.2" y="1235.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="902.2" y="1246.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="901.3" y="1251.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="904.3" y="1262.0"></text>
</g>
<g>
<title>__GI___recv (16 samples, 1.42%)</title><rect x="902.3" y="1283.0" width="16.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="905.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.33%)</title><rect x="903.4" y="1267.0" width="15.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="906.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.33%)</title><rect x="903.4" y="1251.0" width="15.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="906.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.25%)</title><rect x="904.4" y="1235.0" width="14.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="907.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.25%)</title><rect x="904.4" y="1219.0" width="14.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="907.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.25%)</title><rect x="904.4" y="1203.0" width="14.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="907.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.07%)</title><rect x="906.5" y="1187.0" width="12.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="909.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.07%)</title><rect x="906.5" y="1171.0" width="12.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="909.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.07%)</title><rect x="906.5" y="1155.0" width="12.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="909.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.89%)</title><rect x="908.6" y="1139.0" width="10.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="911.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.62%)</title><rect x="911.8" y="1123.0" width="7.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="914.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="917.0" y="1107.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="920.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="918.1" y="1091.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="921.1" y="1102.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="919.1" y="1283.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="922.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="919.1" y="1267.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="922.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="919.1" y="1251.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="922.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="919.1" y="1235.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="922.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.18%)</title><rect x="920.2" y="1299.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.2" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="922.3" y="1363.0" width="2.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="925.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1347.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="925.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1331.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="925.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1315.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="925.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1299.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="925.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1283.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="925.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="922.3" y="1267.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="925.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="923.3" y="1251.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="926.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="923.3" y="1235.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="926.3" y="1246.0"></text>
</g>
<g>
<title>start_thread (253 samples, 22.51%)</title><rect x="924.4" y="1363.0" width="265.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="927.4" y="1374.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (253 samples, 22.51%)</title><rect x="924.4" y="1347.0" width="265.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="927.4" y="1358.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (253 samples, 22.51%)</title><rect x="924.4" y="1331.0" width="265.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="927.4" y="1342.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.89%)</title><rect x="924.4" y="1315.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.4" y="1326.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.89%)</title><rect x="924.4" y="1299.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="927.4" y="1310.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.71%)</title><rect x="924.4" y="1283.0" width="8.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.4" y="1294.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.09%)</title><rect x="924.4" y="1267.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.4" y="1278.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.09%)</title><rect x="924.4" y="1251.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="924.4" y="1235.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="927.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="924.4" y="1219.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="927.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="924.4" y="1203.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="927.4" y="1214.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.27%)</title><rect x="925.4" y="1267.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="928.4" y="1278.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.36%)</title><rect x="928.6" y="1267.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="931.6" y="1278.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="932.8" y="1283.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="935.8" y="1294.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.18%)</title><rect x="932.8" y="1267.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="935.8" y="1278.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.18%)</title><rect x="932.8" y="1251.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="935.8" y="1262.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.18%)</title><rect x="932.8" y="1235.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="935.8" y="1246.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (2 samples, 0.18%)</title><rect x="932.8" y="1219.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="935.8" y="1230.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.09%)</title><rect x="932.8" y="1203.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="935.8" y="1214.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.09%)</title><rect x="932.8" y="1187.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.8" y="1198.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="933.8" y="1203.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="936.8" y="1214.0"></text>
</g>
<g>
<title>JavaThread::run() (242 samples, 21.53%)</title><rect x="934.9" y="1315.0" width="254.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="937.9" y="1326.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (242 samples, 21.53%)</title><rect x="934.9" y="1299.0" width="254.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="937.9" y="1310.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (236 samples, 21.00%)</title><rect x="934.9" y="1283.0" width="247.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="937.9" y="1294.0">CompileBroker::compiler_thread_lo..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (236 samples, 21.00%)</title><rect x="934.9" y="1267.0" width="247.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="937.9" y="1278.0">CompileBroker::invoke_compiler_on..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (214 samples, 19.04%)</title><rect x="934.9" y="1251.0" width="224.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="937.9" y="1262.0">C2Compiler::compile_method(ciE..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (214 samples, 19.04%)</title><rect x="934.9" y="1235.0" width="224.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="937.9" y="1246.0">Compile::Compile(ciEnv*, C2Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (130 samples, 11.57%)</title><rect x="934.9" y="1219.0" width="136.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="937.9" y="1230.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.18%)</title><rect x="934.9" y="1203.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="937.9" y="1214.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.18%)</title><rect x="934.9" y="1187.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="937.9" y="1198.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.09%)</title><rect x="935.9" y="1171.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="938.9" y="1182.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.27%)</title><rect x="937.0" y="1203.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.0" y="1214.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.09%)</title><rect x="939.1" y="1187.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="942.1" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.09%)</title><rect x="939.1" y="1171.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="942.1" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.09%)</title><rect x="939.1" y="1155.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="942.1" y="1166.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.09%)</title><rect x="940.1" y="1203.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="943.1" y="1214.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.44%)</title><rect x="941.2" y="1203.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="944.2" y="1214.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.36%)</title><rect x="941.2" y="1187.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="944.2" y="1198.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.09%)</title><rect x="942.2" y="1171.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="945.2" y="1182.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.09%)</title><rect x="943.3" y="1171.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="946.3" y="1182.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.09%)</title><rect x="943.3" y="1155.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.3" y="1166.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.09%)</title><rect x="943.3" y="1139.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.3" y="1150.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1171.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="947.3" y="1182.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1155.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.3" y="1166.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1139.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="947.3" y="1150.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1123.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="947.3" y="1134.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1107.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="947.3" y="1118.0"></text>
</g>
<g>
<title>State::_sub_Op_ConL(Node const*) (1 samples, 0.09%)</title><rect x="944.3" y="1091.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.3" y="1102.0"></text>
</g>
<g>
<title>MultiNode::match(ProjNode const*, Matcher const*) (1 samples, 0.09%)</title><rect x="945.4" y="1187.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="948.4" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.09%)</title><rect x="946.4" y="1203.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="949.4" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.09%)</title><rect x="946.4" y="1187.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="949.4" y="1198.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.09%)</title><rect x="946.4" y="1171.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="949.4" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (10 samples, 0.89%)</title><rect x="947.5" y="1203.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="950.5" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (10 samples, 0.89%)</title><rect x="947.5" y="1187.0" width="10.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="950.5" y="1198.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::ideal_Opcode() const (1 samples, 0.09%)</title><rect x="947.5" y="1171.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="950.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="948.5" y="1171.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="951.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="949.6" y="1171.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="952.6" y="1182.0"></text>
</g>
<g>
<title>Type::has_memory() const (1 samples, 0.09%)</title><rect x="949.6" y="1155.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="952.6" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.18%)</title><rect x="950.6" y="1171.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="953.6" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="951.7" y="1155.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="954.7" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&amp;, Matcher&amp;, bool) (1 samples, 0.09%)</title><rect x="952.7" y="1171.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="955.7" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.09%)</title><rect x="953.8" y="1171.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="956.8" y="1182.0"></text>
</g>
<g>
<title>MachOper::num_edges() const (1 samples, 0.09%)</title><rect x="953.8" y="1155.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.09%)</title><rect x="954.8" y="1171.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="957.8" y="1182.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.09%)</title><rect x="954.8" y="1155.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="957.8" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.18%)</title><rect x="955.9" y="1171.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="958.9" y="1182.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="955.9" y="1155.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="958.9" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="955.9" y="1139.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="958.9" y="1150.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.09%)</title><rect x="956.9" y="1155.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="959.9" y="1166.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.09%)</title><rect x="956.9" y="1139.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="959.9" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.09%)</title><rect x="956.9" y="1123.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="959.9" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (108 samples, 9.61%)</title><rect x="958.0" y="1203.0" width="113.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="961.0" y="1214.0">PhaseChaitin::..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.18%)</title><rect x="958.0" y="1187.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.0" y="1198.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.09%)</title><rect x="960.1" y="1187.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.1" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (7 samples, 0.62%)</title><rect x="961.1" y="1187.0" width="7.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="964.1" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="963.2" y="1171.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="966.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (4 samples, 0.36%)</title><rect x="964.3" y="1171.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="967.3" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.27%)</title><rect x="965.3" y="1155.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="968.3" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (7 samples, 0.62%)</title><rect x="968.5" y="1187.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="971.5" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.09%)</title><rect x="968.5" y="1171.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.5" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="969.5" y="1171.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="972.5" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (4 samples, 0.36%)</title><rect x="971.6" y="1171.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="974.6" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="973.7" y="1155.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="976.7" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.98%)</title><rect x="975.8" y="1187.0" width="11.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="978.8" y="1198.0"></text>
</g>
<g>
<title>MachIdealNode::rule() const (1 samples, 0.09%)</title><rect x="983.2" y="1171.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="986.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="983.2" y="1155.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="986.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="983.2" y="1139.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="986.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="983.2" y="1123.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="986.2" y="1134.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (2 samples, 0.18%)</title><rect x="984.2" y="1171.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.09%)</title><rect x="986.3" y="1171.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.3" y="1182.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.09%)</title><rect x="986.3" y="1155.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="989.3" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (27 samples, 2.40%)</title><rect x="987.4" y="1187.0" width="28.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.4" y="1198.0">Ph..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.09%)</title><rect x="991.6" y="1171.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="991.6" y="1155.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="994.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="991.6" y="1139.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="994.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="991.6" y="1123.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="994.6" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="992.6" y="1171.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.6" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (10 samples, 0.89%)</title><rect x="994.7" y="1171.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="997.7" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.09%)</title><rect x="997.9" y="1155.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.9" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.53%)</title><rect x="998.9" y="1155.0" width="6.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1004.2" y="1139.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1007.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1004.2" y="1123.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1007.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1004.2" y="1107.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1007.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (10 samples, 0.89%)</title><rect x="1005.2" y="1171.0" width="10.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1008.2" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="1006.3" y="1155.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.3" y="1166.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.18%)</title><rect x="1008.4" y="1155.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.4" y="1166.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (4 samples, 0.36%)</title><rect x="1010.5" y="1155.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1013.5" y="1166.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.09%)</title><rect x="1014.7" y="1155.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1017.7" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (1 samples, 0.09%)</title><rect x="1015.7" y="1187.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.7" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.36%)</title><rect x="1016.8" y="1187.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1019.8" y="1198.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.09%)</title><rect x="1017.8" y="1171.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.8" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (2 samples, 0.18%)</title><rect x="1018.9" y="1171.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.9" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (3 samples, 0.27%)</title><rect x="1021.0" y="1187.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1024.0" y="1198.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="1022.0" y="1171.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1025.0" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.09%)</title><rect x="1023.1" y="1171.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1026.1" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.18%)</title><rect x="1024.1" y="1187.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1027.1" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (14 samples, 1.25%)</title><rect x="1026.2" y="1187.0" width="14.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1029.2" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (7 samples, 0.62%)</title><rect x="1032.5" y="1171.0" width="7.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1035.5" y="1182.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.09%)</title><rect x="1039.9" y="1171.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1042.9" y="1182.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.18%)</title><rect x="1040.9" y="1187.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.9" y="1198.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.09%)</title><rect x="1040.9" y="1171.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.9" y="1182.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.09%)</title><rect x="1040.9" y="1155.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1043.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.09%)</title><rect x="1040.9" y="1139.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.9" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="1040.9" y="1123.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1043.9" y="1134.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.09%)</title><rect x="1042.0" y="1171.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1045.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (6 samples, 0.53%)</title><rect x="1043.0" y="1187.0" width="6.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.0" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.27%)</title><rect x="1046.2" y="1171.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (4 samples, 0.36%)</title><rect x="1049.3" y="1187.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.3" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="1051.4" y="1171.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1054.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.27%)</title><rect x="1053.5" y="1187.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.5" y="1198.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.27%)</title><rect x="1053.5" y="1171.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1055.6" y="1155.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1058.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1055.6" y="1139.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1058.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1055.6" y="1123.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1058.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1055.6" y="1107.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1058.6" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (12 samples, 1.07%)</title><rect x="1056.7" y="1187.0" width="12.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.7" y="1198.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.09%)</title><rect x="1060.9" y="1171.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1063.9" y="1182.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.09%)</title><rect x="1061.9" y="1171.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.9" y="1182.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.36%)</title><rect x="1063.0" y="1171.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1066.0" y="1182.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.09%)</title><rect x="1064.0" y="1155.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1067.0" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="1065.1" y="1155.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1068.1" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="1067.2" y="1171.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.2" y="1182.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1067.2" y="1155.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1070.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1068.2" y="1171.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1071.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1068.2" y="1155.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1071.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1068.2" y="1139.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1071.2" y="1150.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.09%)</title><rect x="1069.3" y="1187.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.3" y="1198.0"></text>
</g>
<g>
<title>ShouldNotReachHereNode::is_block_proj() const (1 samples, 0.09%)</title><rect x="1070.3" y="1187.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.3" y="1198.0"></text>
</g>
<g>
<title>Compile::Optimize() (59 samples, 5.25%)</title><rect x="1071.4" y="1219.0" width="61.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.4" y="1230.0">Compil..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.09%)</title><rect x="1071.4" y="1203.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.4" y="1214.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.09%)</title><rect x="1071.4" y="1187.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.4" y="1198.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.09%)</title><rect x="1071.4" y="1171.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1074.4" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.18%)</title><rect x="1072.4" y="1203.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.4" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.18%)</title><rect x="1072.4" y="1187.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1075.4" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1073.5" y="1171.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.5" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.247] (1 samples, 0.09%)</title><rect x="1073.5" y="1155.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.5" y="1166.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.18%)</title><rect x="1074.5" y="1203.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1077.5" y="1214.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1075.6" y="1187.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.6" y="1198.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.09%)</title><rect x="1076.6" y="1203.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1079.6" y="1214.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.09%)</title><rect x="1076.6" y="1187.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1079.6" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (44 samples, 3.91%)</title><rect x="1077.7" y="1203.0" width="46.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.7" y="1214.0">Phas..</text>
</g>
<g>
<title>MultiNode::is_CFG() const (2 samples, 0.18%)</title><rect x="1077.7" y="1187.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.7" y="1198.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.09%)</title><rect x="1079.8" y="1187.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.27%)</title><rect x="1080.8" y="1187.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1083.8" y="1198.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.09%)</title><rect x="1081.9" y="1171.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1084.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1171.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1085.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1155.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1085.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1139.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1085.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1123.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1085.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1107.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1085.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1091.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1085.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1075.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1085.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1082.9" y="1059.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1085.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.36%)</title><rect x="1084.0" y="1187.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1087.0" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (18 samples, 1.60%)</title><rect x="1088.2" y="1187.0" width="18.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1091.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (15 samples, 1.33%)</title><rect x="1091.3" y="1171.0" width="15.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.3" y="1182.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.09%)</title><rect x="1095.5" y="1155.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.5" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (10 samples, 0.89%)</title><rect x="1096.6" y="1155.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1099.6" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.09%)</title><rect x="1096.6" y="1139.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1096.6" y="1123.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (9 samples, 0.80%)</title><rect x="1097.6" y="1139.0" width="9.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (5 samples, 0.44%)</title><rect x="1107.1" y="1187.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (3 samples, 0.27%)</title><rect x="1109.2" y="1171.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.18%)</title><rect x="1112.3" y="1187.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.3" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.09%)</title><rect x="1112.3" y="1171.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.3" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.09%)</title><rect x="1113.4" y="1171.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.09%)</title><rect x="1113.4" y="1155.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.53%)</title><rect x="1114.4" y="1187.0" width="6.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.53%)</title><rect x="1114.4" y="1171.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.4" y="1182.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1114.4" y="1155.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.4" y="1166.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.09%)</title><rect x="1114.4" y="1139.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.4" y="1150.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1114.4" y="1123.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.4" y="1134.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1114.4" y="1107.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.4" y="1118.0"></text>
</g>
<g>
<title>BoolNode::Opcode() const (1 samples, 0.09%)</title><rect x="1115.5" y="1155.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.5" y="1166.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1116.5" y="1155.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1119.5" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.09%)</title><rect x="1117.6" y="1155.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.6" y="1166.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1118.6" y="1155.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.6" y="1166.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1119.7" y="1155.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.7" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1119.7" y="1139.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.7" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1119.7" y="1123.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.7" y="1134.0"></text>
</g>
<g>
<title>TypeNarrowPtr::eq(Type const*) const (1 samples, 0.09%)</title><rect x="1119.7" y="1107.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.7" y="1118.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.09%)</title><rect x="1120.7" y="1187.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.7" y="1198.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.09%)</title><rect x="1121.8" y="1187.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.8" y="1198.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="1122.8" y="1187.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1125.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.09%)</title><rect x="1123.9" y="1203.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.09%)</title><rect x="1123.9" y="1187.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.27%)</title><rect x="1124.9" y="1203.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1127.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.18%)</title><rect x="1124.9" y="1187.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1127.9" y="1198.0"></text>
</g>
<g>
<title>LoadBNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1124.9" y="1171.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.9" y="1182.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.09%)</title><rect x="1124.9" y="1155.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.9" y="1166.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.09%)</title><rect x="1124.9" y="1139.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.9" y="1150.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.09%)</title><rect x="1124.9" y="1123.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.9" y="1134.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1126.0" y="1171.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.0" y="1182.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1126.0" y="1155.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1129.0" y="1166.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.09%)</title><rect x="1127.0" y="1187.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.0" y="1198.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.09%)</title><rect x="1128.1" y="1203.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.1" y="1214.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.09%)</title><rect x="1128.1" y="1187.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1128.1" y="1171.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.1" y="1182.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.18%)</title><rect x="1129.1" y="1203.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.1" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="1129.1" y="1187.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="1129.1" y="1171.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.1" y="1182.0"></text>
</g>
<g>
<title>MulNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1129.1" y="1155.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.1" y="1166.0"></text>
</g>
<g>
<title>TypeLong::make(long, long, int) (1 samples, 0.09%)</title><rect x="1129.1" y="1139.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.1" y="1150.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.09%)</title><rect x="1129.1" y="1123.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1132.1" y="1134.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.09%)</title><rect x="1130.2" y="1187.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1130.2" y="1171.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="1130.2" y="1155.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.2" y="1166.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.09%)</title><rect x="1130.2" y="1139.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.2" y="1150.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.09%)</title><rect x="1131.2" y="1203.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1214.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.09%)</title><rect x="1131.2" y="1187.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.2" y="1198.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.09%)</title><rect x="1131.2" y="1171.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.2" y="1182.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.09%)</title><rect x="1132.3" y="1203.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.3" y="1214.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.09%)</title><rect x="1133.3" y="1219.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.3" y="1230.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.09%)</title><rect x="1133.3" y="1203.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1136.3" y="1214.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.09%)</title><rect x="1133.3" y="1187.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.3" y="1198.0"></text>
</g>
<g>
<title>PhaseStringOpts::int_getChars(GraphKit&amp;, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1133.3" y="1171.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.3" y="1182.0"></text>
</g>
<g>
<title>PhaseStringOpts::getChars(GraphKit&amp;, Node*, Node*, BasicType, Node*, Node*, Node*, int) (1 samples, 0.09%)</title><rect x="1133.3" y="1155.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.3" y="1166.0"></text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.09%)</title><rect x="1133.3" y="1139.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.3" y="1150.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.185] (1 samples, 0.09%)</title><rect x="1133.3" y="1123.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.3" y="1134.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1133.3" y="1107.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.3" y="1118.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="1133.3" y="1091.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.3" y="1102.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.09%)</title><rect x="1134.4" y="1219.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.4" y="1230.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.09%)</title><rect x="1134.4" y="1203.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.4" y="1214.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1134.4" y="1187.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.4" y="1198.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="1134.4" y="1171.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1137.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1134.4" y="1155.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1137.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1134.4" y="1139.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1137.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1134.4" y="1123.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1137.4" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (22 samples, 1.96%)</title><rect x="1135.4" y="1219.0" width="23.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.4" y="1230.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (22 samples, 1.96%)</title><rect x="1135.4" y="1203.0" width="23.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.4" y="1214.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 1.96%)</title><rect x="1135.4" y="1187.0" width="23.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.4" y="1198.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 1.96%)</title><rect x="1135.4" y="1171.0" width="23.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.4" y="1182.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 1.96%)</title><rect x="1135.4" y="1155.0" width="23.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.4" y="1166.0">P..</text>
</g>
<g>
<title>Parse::do_call() (21 samples, 1.87%)</title><rect x="1135.4" y="1139.0" width="22.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.4" y="1150.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1135.4" y="1123.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.4" y="1134.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1135.4" y="1107.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.4" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1135.4" y="1091.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.4" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1135.4" y="1075.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.4" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1135.4" y="1059.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.4" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::get_start_state() (1 samples, 0.09%)</title><rect x="1135.4" y="1043.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.4" y="1054.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="1135.4" y="1027.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.4" y="1038.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.09%)</title><rect x="1135.4" y="1011.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1138.4" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.98%)</title><rect x="1136.5" y="1123.0" width="11.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.5" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.98%)</title><rect x="1136.5" y="1107.0" width="11.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.5" y="1118.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.09%)</title><rect x="1136.5" y="1091.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.5" y="1102.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.09%)</title><rect x="1136.5" y="1075.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.5" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.09%)</title><rect x="1136.5" y="1059.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1139.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.89%)</title><rect x="1137.5" y="1091.0" width="10.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.89%)</title><rect x="1137.5" y="1075.0" width="10.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.89%)</title><rect x="1137.5" y="1059.0" width="10.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1140.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.89%)</title><rect x="1137.5" y="1043.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.5" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.71%)</title><rect x="1137.5" y="1027.0" width="8.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.71%)</title><rect x="1137.5" y="1011.0" width="8.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1140.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.71%)</title><rect x="1137.5" y="995.0" width="8.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.62%)</title><rect x="1137.5" y="979.0" width="7.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.62%)</title><rect x="1137.5" y="963.0" width="7.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.5" y="974.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.09%)</title><rect x="1137.5" y="947.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.5" y="958.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.09%)</title><rect x="1137.5" y="931.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.5" y="942.0"></text>
</g>
<g>
<title>GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*) (1 samples, 0.09%)</title><rect x="1137.5" y="915.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.5" y="926.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1137.5" y="899.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.5" y="910.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.09%)</title><rect x="1137.5" y="883.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.5" y="894.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1137.5" y="867.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.5" y="878.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1137.5" y="851.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.44%)</title><rect x="1138.6" y="947.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.6" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.44%)</title><rect x="1138.6" y="931.0" width="5.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.6" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.44%)</title><rect x="1138.6" y="915.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.44%)</title><rect x="1138.6" y="899.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.44%)</title><rect x="1138.6" y="883.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.44%)</title><rect x="1138.6" y="867.0" width="5.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1138.6" y="851.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.6" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1138.6" y="835.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.6" y="846.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1138.6" y="819.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.6" y="830.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1138.6" y="803.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.6" y="814.0"></text>
</g>
<g>
<title>is_init_with_ea(ciMethod*, ciMethod*, Compile*) (1 samples, 0.09%)</title><rect x="1138.6" y="787.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1141.6" y="798.0"></text>
</g>
<g>
<title>ciMethod::is_initializer() const (1 samples, 0.09%)</title><rect x="1138.6" y="771.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.6" y="782.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.09%)</title><rect x="1138.6" y="755.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1141.6" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1139.6" y="835.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.6" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1139.6" y="819.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.6" y="830.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.09%)</title><rect x="1139.6" y="803.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.6" y="814.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1139.6" y="787.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.6" y="798.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.09%)</title><rect x="1139.6" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.6" y="782.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.09%)</title><rect x="1139.6" y="755.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.6" y="766.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="1139.6" y="739.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1140.7" y="803.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1140.7" y="787.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1140.7" y="771.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1140.7" y="755.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.7" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1140.7" y="739.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.7" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1140.7" y="723.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1140.7" y="707.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1140.7" y="691.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1140.7" y="675.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1140.7" y="659.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.7" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1140.7" y="643.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1140.7" y="627.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1140.7" y="611.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1140.7" y="595.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1140.7" y="579.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.7" y="590.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.09%)</title><rect x="1140.7" y="563.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.7" y="574.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.09%)</title><rect x="1140.7" y="547.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.7" y="558.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.09%)</title><rect x="1140.7" y="531.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="542.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1140.7" y="515.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.7" y="526.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.09%)</title><rect x="1140.7" y="499.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.09%)</title><rect x="1141.7" y="755.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.09%)</title><rect x="1141.7" y="739.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.7" y="750.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1141.7" y="723.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.7" y="734.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1141.7" y="707.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.7" y="718.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1141.7" y="691.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.7" y="702.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.09%)</title><rect x="1141.7" y="675.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.7" y="686.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1141.7" y="659.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.09%)</title><rect x="1142.8" y="851.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.8" y="862.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.09%)</title><rect x="1142.8" y="835.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.8" y="846.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1142.8" y="819.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.8" y="830.0"></text>
</g>
<g>
<title>Parse::profile_taken_branch(int, bool) (1 samples, 0.09%)</title><rect x="1143.8" y="947.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.8" y="958.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1144.9" y="979.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.9" y="990.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1144.9" y="963.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.9" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.9" y="1027.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.9" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.9" y="1011.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.9" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1145.9" y="995.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1145.9" y="979.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1145.9" y="963.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1145.9" y="947.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1145.9" y="931.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.9" y="942.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1145.9" y="915.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.9" y="926.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1145.9" y="899.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.9" y="910.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1145.9" y="883.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.9" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1145.9" y="867.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.9" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1145.9" y="851.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.9" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1145.9" y="835.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.9" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1145.9" y="819.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.9" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1145.9" y="803.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.9" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1147.0" y="1027.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.0" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1147.0" y="1011.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.0" y="1022.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.09%)</title><rect x="1147.0" y="995.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1150.0" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (9 samples, 0.80%)</title><rect x="1148.0" y="1123.0" width="9.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.0" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.44%)</title><rect x="1148.0" y="1107.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.0" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.44%)</title><rect x="1148.0" y="1091.0" width="5.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.44%)</title><rect x="1148.0" y="1075.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.44%)</title><rect x="1148.0" y="1059.0" width="5.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.44%)</title><rect x="1148.0" y="1043.0" width="5.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1148.0" y="1027.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.0" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1148.0" y="1011.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.0" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1148.0" y="995.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.0" y="1006.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1148.0" y="979.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1149.1" y="979.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1149.1" y="963.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1149.1" y="947.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1149.1" y="931.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.1" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1149.1" y="915.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.1" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1149.1" y="899.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1149.1" y="883.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1149.1" y="867.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1149.1" y="851.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1149.1" y="835.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.1" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1149.1" y="819.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.1" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1149.1" y="803.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1149.1" y="787.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1149.1" y="771.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1149.1" y="755.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.1" y="766.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.09%)</title><rect x="1149.1" y="739.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.1" y="750.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1149.1" y="723.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.1" y="734.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1149.1" y="707.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.1" y="718.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1149.1" y="691.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.1" y="702.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.09%)</title><rect x="1149.1" y="675.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.1" y="686.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.09%)</title><rect x="1149.1" y="659.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.1" y="670.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.09%)</title><rect x="1149.1" y="643.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.1" y="654.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.09%)</title><rect x="1149.1" y="627.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.1" y="638.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.09%)</title><rect x="1149.1" y="611.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.1" y="622.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned (1 samples, 0.09%)</title><rect x="1149.1" y="595.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1152.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1150.1" y="739.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.1" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.1" y="723.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.1" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.1" y="707.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.1" y="691.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.1" y="675.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.1" y="659.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.1" y="643.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.1" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.1" y="627.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.1" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.1" y="611.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.1" y="595.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.1" y="579.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.1" y="563.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.1" y="547.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.1" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.1" y="531.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.1" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.1" y="515.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.1" y="526.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.09%)</title><rect x="1150.1" y="499.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.1" y="510.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1150.1" y="483.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.1" y="494.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="1150.1" y="467.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.1" y="478.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.09%)</title><rect x="1150.1" y="451.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.1" y="462.0"></text>
</g>
<g>
<title>TypePtr::speculative_type() const (1 samples, 0.09%)</title><rect x="1151.2" y="723.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.2" y="734.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.09%)</title><rect x="1151.2" y="707.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.2" y="718.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.09%)</title><rect x="1151.2" y="691.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.2" y="702.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1151.2" y="675.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.09%)</title><rect x="1152.2" y="1027.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.09%)</title><rect x="1152.2" y="1011.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.2" y="1022.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1152.2" y="995.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.2" y="1006.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1152.2" y="979.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.2" y="990.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1152.2" y="963.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.2" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1152.2" y="947.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.2" y="958.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1152.2" y="931.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.2" y="942.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1152.2" y="915.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.2" y="926.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1152.2" y="899.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.2" y="910.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.09%)</title><rect x="1152.2" y="883.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.2" y="894.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="1152.2" y="867.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.2" y="878.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1152.2" y="851.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.2" y="862.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.09%)</title><rect x="1152.2" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.2" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="1107.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.3" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="1091.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="1075.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="1059.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="1043.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="1027.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="1011.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.3" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="995.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.3" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="979.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="963.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="947.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="931.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="915.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.3" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="899.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.3" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="883.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="867.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="851.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="835.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="819.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.3" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="803.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.3" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="787.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="771.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="755.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="739.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="723.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="707.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="691.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="675.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="659.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="643.0" width="4.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="627.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.3" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="611.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="595.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="579.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="563.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="547.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="531.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.36%)</title><rect x="1153.3" y="515.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.3" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.36%)</title><rect x="1153.3" y="499.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.36%)</title><rect x="1153.3" y="483.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.36%)</title><rect x="1153.3" y="467.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.36%)</title><rect x="1153.3" y="451.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.36%)</title><rect x="1153.3" y="435.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.3" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1153.3" y="419.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1153.3" y="403.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1153.3" y="387.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1153.3" y="371.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1153.3" y="355.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1153.3" y="339.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.3" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1153.3" y="323.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.3" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1153.3" y="307.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1153.3" y="291.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1153.3" y="275.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1153.3" y="259.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1153.3" y="243.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="254.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1153.3" y="227.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.3" y="238.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1153.3" y="211.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.3" y="222.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1153.3" y="195.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.3" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1153.3" y="179.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.3" y="190.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1153.3" y="163.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.3" y="174.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1153.3" y="147.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.3" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1154.3" y="227.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.3" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1154.3" y="211.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1154.3" y="195.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.3" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1154.3" y="179.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.3" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1154.3" y="163.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.3" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1154.3" y="147.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.3" y="158.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1154.3" y="131.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.3" y="142.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.09%)</title><rect x="1154.3" y="115.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.3" y="126.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.177] (1 samples, 0.09%)</title><rect x="1154.3" y="99.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.3" y="110.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1154.3" y="83.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.3" y="94.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1154.3" y="67.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.3" y="78.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.09%)</title><rect x="1154.3" y="51.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.3" y="62.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.09%)</title><rect x="1154.3" y="35.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.3" y="46.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.09%)</title><rect x="1155.4" y="147.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.4" y="158.0"></text>
</g>
<g>
<title>PhiNode::slice_memory(TypePtr const*) const (1 samples, 0.09%)</title><rect x="1155.4" y="131.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.4" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1155.4" y="115.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1158.4" y="126.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1156.4" y="419.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.4" y="430.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1156.4" y="403.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.4" y="414.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1156.4" y="387.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.4" y="398.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1156.4" y="371.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.4" y="382.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1156.4" y="355.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.09%)</title><rect x="1157.5" y="1139.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.5" y="1150.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1157.5" y="1123.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.5" y="1134.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.09%)</title><rect x="1158.5" y="1219.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.5" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.09%)</title><rect x="1158.5" y="1203.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.5" y="1214.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.09%)</title><rect x="1158.5" y="1187.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.5" y="1198.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="1158.5" y="1171.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.5" y="1182.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (20 samples, 1.78%)</title><rect x="1159.6" y="1251.0" width="21.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.6" y="1262.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (20 samples, 1.78%)</title><rect x="1159.6" y="1235.0" width="21.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.6" y="1246.0"></text>
</g>
<g>
<title>Compilation::compile_method() (20 samples, 1.78%)</title><rect x="1159.6" y="1219.0" width="21.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.6" y="1230.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (17 samples, 1.51%)</title><rect x="1159.6" y="1203.0" width="17.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.6" y="1214.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (7 samples, 0.62%)</title><rect x="1159.6" y="1187.0" width="7.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.6" y="1198.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.44%)</title><rect x="1159.6" y="1171.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.6" y="1182.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.44%)</title><rect x="1159.6" y="1155.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.6" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.44%)</title><rect x="1159.6" y="1139.0" width="5.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.6" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.44%)</title><rect x="1159.6" y="1123.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.44%)</title><rect x="1159.6" y="1107.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.6" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.44%)</title><rect x="1159.6" y="1091.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.36%)</title><rect x="1159.6" y="1075.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.6" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.36%)</title><rect x="1159.6" y="1059.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.6" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.36%)</title><rect x="1159.6" y="1043.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.6" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.36%)</title><rect x="1159.6" y="1027.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.09%)</title><rect x="1159.6" y="1011.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.6" y="1022.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.09%)</title><rect x="1159.6" y="995.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.6" y="1006.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="1159.6" y="979.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.6" y="990.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.09%)</title><rect x="1159.6" y="963.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1162.6" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.27%)</title><rect x="1160.6" y="1011.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.6" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.18%)</title><rect x="1160.6" y="995.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.6" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.18%)</title><rect x="1160.6" y="979.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.6" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.18%)</title><rect x="1160.6" y="963.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.6" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.18%)</title><rect x="1160.6" y="947.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1160.6" y="931.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.6" y="942.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.09%)</title><rect x="1160.6" y="915.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.6" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.09%)</title><rect x="1160.6" y="899.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.6" y="910.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.09%)</title><rect x="1160.6" y="883.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.6" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1160.6" y="867.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.6" y="878.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.09%)</title><rect x="1160.6" y="851.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.6" y="862.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.09%)</title><rect x="1160.6" y="835.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1163.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1160.6" y="819.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1163.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1160.6" y="803.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1163.6" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1161.7" y="931.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.7" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="915.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.7" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="899.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.7" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.09%)</title><rect x="1161.7" y="883.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.7" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.09%)</title><rect x="1161.7" y="867.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.7" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1161.7" y="851.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.7" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.7" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="819.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.7" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.09%)</title><rect x="1161.7" y="803.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.7" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.09%)</title><rect x="1161.7" y="787.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.7" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1161.7" y="771.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.7" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="755.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.7" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.09%)</title><rect x="1161.7" y="739.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.7" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.09%)</title><rect x="1161.7" y="723.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.7" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.09%)</title><rect x="1161.7" y="707.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.7" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::shift_op(ValueType*, Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1161.7" y="691.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::append(Instruction* const&amp;) (1 samples, 0.09%)</title><rect x="1161.7" y="675.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1162.7" y="995.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.7" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1162.7" y="979.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.7" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1162.7" y="963.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.7" y="974.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1162.7" y="947.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.7" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1162.7" y="931.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.7" y="942.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1162.7" y="915.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.7" y="926.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="1162.7" y="899.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.7" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.09%)</title><rect x="1162.7" y="883.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.7" y="894.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.09%)</title><rect x="1162.7" y="867.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.7" y="878.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.09%)</title><rect x="1162.7" y="851.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1165.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1162.7" y="835.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1165.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1162.7" y="819.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1165.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1162.7" y="803.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1165.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1162.7" y="787.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1165.7" y="798.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.09%)</title><rect x="1163.8" y="1075.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.8" y="1086.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.09%)</title><rect x="1163.8" y="1059.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.8" y="1070.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.09%)</title><rect x="1163.8" y="1043.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.8" y="1054.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (2 samples, 0.18%)</title><rect x="1164.8" y="1171.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.8" y="1182.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.18%)</title><rect x="1164.8" y="1155.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.8" y="1166.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.18%)</title><rect x="1164.8" y="1139.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.8" y="1150.0"></text>
</g>
<g>
<title>Phi::as_Phi() (1 samples, 0.09%)</title><rect x="1165.9" y="1123.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.9" y="1107.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1168.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.9" y="1091.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1168.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.9" y="1075.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1168.9" y="1086.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.18%)</title><rect x="1166.9" y="1187.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.09%)</title><rect x="1166.9" y="1171.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="1182.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.09%)</title><rect x="1168.0" y="1171.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.0" y="1182.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.09%)</title><rect x="1168.0" y="1155.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.0" y="1166.0"></text>
</g>
<g>
<title>CodeBuffer::locator_address(int) const (1 samples, 0.09%)</title><rect x="1168.0" y="1139.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.0" y="1150.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (8 samples, 0.71%)</title><rect x="1169.0" y="1187.0" width="8.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.0" y="1198.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.09%)</title><rect x="1169.0" y="1171.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.0" y="1182.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.09%)</title><rect x="1169.0" y="1155.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.0" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.09%)</title><rect x="1169.0" y="1139.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.0" y="1150.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (1 samples, 0.09%)</title><rect x="1169.0" y="1123.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1169.0" y="1107.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1172.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1169.0" y="1091.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1172.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1169.0" y="1075.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1172.0" y="1086.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (7 samples, 0.62%)</title><rect x="1170.1" y="1171.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.1" y="1182.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (3 samples, 0.27%)</title><rect x="1170.1" y="1155.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.1" y="1166.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.09%)</title><rect x="1170.1" y="1139.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.1" y="1150.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.09%)</title><rect x="1170.1" y="1123.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.1" y="1134.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.09%)</title><rect x="1170.1" y="1107.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.1" y="1118.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.18%)</title><rect x="1171.1" y="1139.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1172.2" y="1123.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1175.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1172.2" y="1107.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1175.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1172.2" y="1091.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1175.2" y="1102.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.09%)</title><rect x="1173.2" y="1155.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.2" y="1166.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.09%)</title><rect x="1173.2" y="1139.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="1150.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (3 samples, 0.27%)</title><rect x="1174.3" y="1155.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.3" y="1166.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.09%)</title><rect x="1174.3" y="1139.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.3" y="1150.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.09%)</title><rect x="1174.3" y="1123.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1177.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.3" y="1107.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1177.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.3" y="1091.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1177.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.3" y="1075.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1177.3" y="1086.0"></text>
</g>
<g>
<title>Interval::add_use_pos(int, IntervalUseKind) (1 samples, 0.09%)</title><rect x="1175.3" y="1139.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1176.4" y="1139.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1179.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1176.4" y="1123.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1179.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1176.4" y="1107.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1179.4" y="1118.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.27%)</title><rect x="1177.4" y="1203.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.4" y="1214.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.09%)</title><rect x="1177.4" y="1187.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.4" y="1198.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.09%)</title><rect x="1177.4" y="1171.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.4" y="1182.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.18%)</title><rect x="1178.5" y="1187.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.5" y="1198.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.18%)</title><rect x="1178.5" y="1171.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.5" y="1182.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.09%)</title><rect x="1178.5" y="1155.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.5" y="1166.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.09%)</title><rect x="1178.5" y="1139.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.5" y="1150.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.09%)</title><rect x="1178.5" y="1123.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.5" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="1178.5" y="1107.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.5" y="1118.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.09%)</title><rect x="1179.5" y="1155.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="1166.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.09%)</title><rect x="1179.5" y="1139.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.5" y="1150.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.09%)</title><rect x="1180.6" y="1251.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.6" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1180.6" y="1235.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1183.6" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.09%)</title><rect x="1181.6" y="1251.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.6" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1181.6" y="1235.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.6" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1181.6" y="1219.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.6" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1181.6" y="1203.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.6" y="1214.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="1181.6" y="1187.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.6" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.09%)</title><rect x="1181.6" y="1171.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.6" y="1182.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 0.44%)</title><rect x="1182.7" y="1283.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="1294.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (5 samples, 0.44%)</title><rect x="1182.7" y="1267.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.7" y="1278.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (5 samples, 0.44%)</title><rect x="1182.7" y="1251.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1182.7" y="1235.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1185.7" y="1246.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (4 samples, 0.36%)</title><rect x="1183.7" y="1235.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1186.7" y="1246.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.09%)</title><rect x="1183.7" y="1219.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.7" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1183.7" y="1203.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1186.7" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (2 samples, 0.18%)</title><rect x="1184.8" y="1219.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="1230.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.09%)</title><rect x="1186.9" y="1219.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1186.9" y="1203.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.9" y="1214.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1187.9" y="1283.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1190.9" y="1294.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.09%)</title><rect x="1189.0" y="1315.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.0" y="1326.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.09%)</title><rect x="1189.0" y="1299.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.0" y="1310.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="1189.0" y="1283.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="1294.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="1189.0" y="1267.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="1278.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="1189.0" y="1251.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1189.0" y="1235.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1192.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1189.0" y="1219.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1189.0" y="1203.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1189.0" y="1187.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1189.0" y="1171.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.0" y="1182.0"></text>
</g>
</g>
</svg>
